ALL: all-redirect
SUBDIRS = src
prefix      = @prefix@
exec_prefix = @exec_prefix@
bindir      = @bindir@
datarootdir = @datarootdir@
datadir     = @datadir@
man1dir     = @mandir@/man1
INSTALL     = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA    = @INSTALL_DATA@
SHELL = @SHELL@
top_srcdir=@top_srcdir@
abs_top_srcdir=@abs_top_srcdir@

distdir = @PACKAGE_NAME@-@PACKAGE_VERSION@

all-redirect: tohtml bfort doctext mapnames bin/bib2html

DATA_FILES = $(DATA_FILES_TOHTML) $(DATA_FILES_DOCTEXT) $(DATA_FILES_BFORT)

# share/* -> datadir/*
DATA_FILES_TOHTML  = pstoppm.ps basedefs.txt blueball.gif greenball.gif \
	purpleball.gif redball.gif yellowball.gif next.gif up.gif previous.gif \
	html.def latex.def nroff.def myst.def refman.def refman.sty \
	next.xbm up.xbm previous.xbm
DATA_FILES_DOCTEXT = doctext/html.def doctext/htmlcolor.def \
	doctext/htmltabl.def doctext/htmlargtbl.def doctext/latex.def \
	doctext/latexargtbl.def doctext/nroff.def doctext/myst.def
DATA_FILES_BFORT   = bfort-base.txt bfort-mpi.txt bfort-petsc.txt
MAN1_FILES         = tohtml.1 doctext.1 bfort.1

# disttargsubdirs are the subdirectories with a dist target that can be used
# with the dist target in this directory.
DISTTARGSUBDIRS = src docs
DISTSUBDIRS      = confdb share
DISTFILES = Makefile.in Makerules.in configure configure.in \
		README autogen.sh aclocal.m4 RELEASE_NOTES install-sh
DISTINCFILES = daytime.h getopts.h patchlevel.h.in \
		rdconfig.h sowing.h sowingconfig.h.in \
		sowingfile.h sowingtxt.h trspace.h
DISTBINFILES = bib2html.in pstogif.in pstoxbm.in checkforglobs

lib/libsowing.a libs:
	@if [ ! -d lib ] ; then @MKDIR@ lib ; fi
	(cd src/sys && ${MAKE} )
lib/libtfilter.a:
	@if [ ! -d lib ] ; then @MKDIR@ lib ; fi
	(cd src/textfilt && ${MAKE} )
tohtml: libs
	(cd src/tohtml && ${MAKE} )
bfort: libs
	(cd src/bfort && ${MAKE} )
src/doctext/doctext doctext:
	(cd src/textfilt && ${MAKE} )
	(cd src/doctext && ${MAKE} )
mapnames:
	(cd src/textfilt && ${MAKE} )
	(cd src/mapnames && ${MAKE} )

manpages: bin/doctext
	(cd src && ${MAKE} manpages )
wwwpages: bin/doctext
	(cd src && ${MAKE} wwwpages )

distpages: bin/doctext
	(cd src && ${MAKE} mandir=$(abs_top_srcdir)/man manpages)
	(cd src && ${MAKE} wwwdir=$(abs_top_srcdir)/www wwwpages)

bin/doctext: src/doctext/doctext
	@if [ ! -d bin ] ; then @MKDIR@ bin ; fi
	ln -s ../src/doctext/doctext bin/doctext

doc: bin/doctext
	(cd docs && ${MAKE} )
#	(cd confdb && ${MAKE} htmldoc && ${MAKE} texdoc)

install:
	@if [ ! -d $(exec_prefix) ] ; then \
	    @MKDIR@ $(exec_prefix) ; fi
	@if [ ! -d $(bindir) ] ; then \
	    @MKDIR@ $(bindir) ; fi
	@if [ ! -d $(datadir) ] ; then \
	    @MKDIR@ $(datadir) ; fi
	@if [ ! -d $(datadir)/doctext ] ; then \
	    @MKDIR@ $(datadir)/doctext ; fi
	@if [ ! -d $(exec_prefix) ] ; then \
	    echo "Please create $(exec_prefix)" ; exit 1 ; fi
	@if [ ! -d $(bindir) ] ; then \
	    echo "Please create $(bindir)" ; exit 1 ; fi
	@if [ ! -d $(datadir) ] ; then \
	    echo "Please create $(datadir)" ; exit 1 ; fi
	@if [ ! -d $(datadir)/doctext ] ; then \
	    echo "Please create $(datadir)/doctext" ; exit 1 ; fi
	@if [ ! -d $(man1dir) ] ; then \
	    @MKDIR@ $(man1dir) ; fi
	@if [ ! -d $(man1dir) ] ; then \
	    echo "Please create $(man1dir)" ; exit 1 ; fi
	$(INSTALL_PROGRAM) bin/bib2html $(bindir)/bib2html
	$(INSTALL_PROGRAM) src/doctext/doctext $(bindir)/doctext
	$(INSTALL_PROGRAM) src/doctext/doc2lt $(bindir)/doc2lt
	$(INSTALL_PROGRAM) src/tohtml/tohtml  $(bindir)/tohtml
	if [ "`cd bin && pwd`" != "`cd $(bindir) && pwd`" ] ; then \
	    $(INSTALL_PROGRAM) bin/pstoxbm $(bindir)/pstoxbm ; \
	    $(INSTALL_PROGRAM) bin/pstogif $(bindir)/pstogif ; \
	fi
	$(INSTALL_PROGRAM) src/bfort/bfort $(bindir)/bfort
	$(INSTALL_PROGRAM) src/mapnames/mapnames $(bindir)/mapnames
	-@if [ "`cd ${top_srcdir}/share && pwd`" != "`cd $(datadir) && pwd`" ] ; then \
	    for file in $(DATA_FILES) ; do \
		echo "INSTALL_DATA ${top_srcdir}/share/$$file $(datadir)/$$file" ; \
		$(INSTALL_DATA) ${top_srcdir}/share/$$file $(datadir)/$$file ; \
	    done ; \
	fi
	-@if [ "`cd ${top_srcdir}/man/man1 && pwd`" != "`cd $(man1dir) && pwd`" ] ; then \
	    for file in $(MAN1_FILES) ; do \
		echo "INSTALL_DATA ${top_srcdir}/man/man1/$$file $(man1dir)/$$file" ;\
		$(INSTALL_DATA) ${top_srcdir}/man/man1/$$file $(man1dir)/$$file ;\
	    done ;\
	fi

uninstall:
	-/bin/rm $(bindir)/mapnames
	-/bin/rm $(bindir)/doctext
	-/bin/rm $(bindir)/tohtml
	-/bin/rm $(bindir)/bfort
	-if [ "`cd bin && pwd`" != "`cd $(bindir) && pwd`" ] ; then \
	    /bin/rm $(bindir)/pstoxbm ; \
	    /bin/rm $(bindir)/pstogif ; \
	fi
	-if [ "`cd share && pwd`" != "`cd $(datadir) && pwd`" ] ; then \
	     for file in $(DATA_FILES) ; do \
		/bin/rm $(datadir)/$$file ; \
	     done ; \
	fi
	-if [ "`cd man/man1 && pwd`" != "`cd $(man1dir) && pwd`" ] ; then \
	    for file in $(MAN1_FILES) ; do \
		/bin/rm $(man1dir)/$$file ; \
	    done ; \
	fi

testing:
	(cd src/bfort/testing && ${MAKE} testing)
	(cd src/doctext/test && ${MAKE} testing)
	(cd src/tohtml/testing && ${MAKE} testing)
	(cd src/bib2html && ${MAKE} testing)
	(cd src/mapnames && ${MAKE} testing)

configure: configure.in
	autoheader
	autoconf

clean:
	-for dir in $(SUBDIRS) docs ; do ( cd $$dir && ${MAKE} clean ) ; done
	-/bin/rm -f lib/libsowing.a lib/libtfilter.a
distclean:
	-for dir in ${SUBDIRS} docs ; do (cd $$dir && ${MAKE} distclean ) ; done
	-rm -f lib/*.a config.status config.log config.cache Makerules \
		config.system Makefile
	-rm -f include/sowingconfig.h
	-rm -f bin/pstofig bin/pstoxbm bin/bib2html
	-rm -f src/doctext/docpath.h include/patchlevel.h include/textfilt/textpath.h

VERSION       = @PACKAGE_VERSION@

# On OSX, Consider running xattr -rc * before running this target
# (c for clear - d <attr> to delete a specific attribute)
# This will add the html documentation pages if they have been built
# in directory www.  Use "make wwwpages" and "make manpages" first
# Note two versions of rev-parse to get the git hash.  This is a todo to
# fix.
sowing-$(VERSION).tar.gz dist: distpages
	@if [ ! -d $(distdir) ] ; then @MKDIR@ $(distdir) ; else \
	    echo "$(distdir) found $(distdir) - delete it and rerun make dist" ; exit 1; fi
	@if [ -d .git ] ; then\
	    git rev-parse HEAD | \
	    sed -e 's/\(.*\)/#define BASEENV_GITHASH "\1"/' > $(distdir)/sowinggit.h ; \
	    git rev-parse --short HEAD > $(distdir)/githash ; \
	fi
	@MKDIR@ $(distdir)/include
	@MKDIR@ $(distdir)/bin
	for file in $(DISTINCFILES) ; do \
		cp -p include/$$file $(distdir)/include/$$file ; done
	dateval=`date` && sed -e "s/Date unknown/$$dateval/g" \
		include/patchlevel.h.in > $(distdir)/include/patchlevel.h.in
	for file in $(DISTBINFILES) ; do \
		cp -p bin/$$file $(distdir)/bin/$$file ; done
	for dir in $(DISTTARGSUBDIRS) ; do \
		echo "make dist in $$dir" ; \
		(cd $$dir && $(MAKE) distdir=../$(distdir)/$$dir dist ) ; done
	for dir in $(DISTSUBDIRS) $(OTHERDIRS) ; do \
		echo "copy $$dir to $(distdir)" ; \
		cp -rp $$dir $(distdir) ; done
	@echo "Copy $(DISTFILES) to $(distdir)"
	for file in $(DISTFILES) ; do cp -p $$file $(distdir) ; done
	if [ X$(FPMPI) != X ] ; then \
	     if [ -d $(FPMPI) ] ; then \
		(cd $(FPMPI) && make dist ) ; \
	        (cd $(distdir) && tar zxf $(FPMPI)/fpmpi2-2.3.tar.gz ) ; \
	     fi ; \
	fi
	if [ -d www ] ; then cp -rp www $(distdir) ; fi
	if [ -d man ] ; then cp -rp man $(distdir) ; fi
	(cd $(distdir) && autoreconf -if)
	@for dir in $(DISTSUBDIRS) $(OTHERDIRS); do \
		rm -f $(distdir)/$$dir/Makefile ; done
	(cd $(distdir) && find . -name 'autom4te*' -print | xargs rm -rf)
	(cd $(distdir) && find . -name '.svn' -print | xargs rm -rf)
	(cd $(distdir) && find . -name '*~' -print | xargs rm -f)
	(cd $(distdir) && find . -name '*.dSYM' -print | xargs rm -rf)
	if [ "`uname -s`" = "Darwin" ] ; then \
	    (cd $(distdir) && xattr -rc * ); fi
	(cd $(distdir) && chmod -R -N *)
	rm -f $(distdir)/Makefile $(distdir)/config.status
	tar czf $(distdir).tgz $(distdir)
	rm -rf $(distdir)

# Note: The xattr and chmod commands are needed on Mac OSX to prevent the
# tar file from containing extraneous and irrelevant files.
olddisttarget:
	@if [ ! -d tmpdir ] ; then @MKDIR@ tmpdir ; fi
	@rm -rf tmpdir/*
	cd tmpdir && svn export https://svn.mcs.anl.gov/repos/sowing/trunk sowing
	cd tmpdir/sowing && ./autogen.sh export
	if test "`uname -s`" = "Darwin" ; then \
	  xattr -rd tmpdir/sowing/* ; \
	  chmod -RN tmpdir/sowing/* ; fi
	mv tmpdir/sowing tmpdir/sowing-$(VERSION)
	cd tmpdir && tar cf - sowing-$(VERSION) | gzip -9 > ../sowing-$(VERSION).tar.gz

# A private publish target
# This should add the Sowing web pages and documentation
publish: sowing-$(VERSION).tar.gz
	rsync -av sowing-$(VERSION).tar.gz wgropp@webhost.engr.illinois.edu:public_html/projects/software/sowing
	ssh wgropp@webhost.engr.illinois.edu 'cd public_html/projects/software/sowing && ln -sf sowing-$(VERSION).tar.gz sowing.tar.gz'

Makefile: Makefile.in config.status
	./config.status --file=Makefile

bin/bib2html: bin/bib2html.in config.status
	./config.status --file=bin/bib2html

.PHONY: dist publish clean distclean install uninstall
